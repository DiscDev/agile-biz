{
  "meta": {
    "document": "project-structure-agent-examples",
    "timestamp": "2025-07-17T01:59:32.507Z",
    "version": "1.0.0",
    "source_file": "aaa-documents/project-structure-agent-examples.md",
    "document_type": "general_documentation"
  },
  "summary": "**Initial Structure (Months 0-2): Single Repository**\n```\nhealth-analytics-platform/\n├── apps/\n│   ├── marketing/     # Next.js SSG\n│   ├── web/          # React SPA\n│   ├── api/          # Node.js/Express\n│   └── admin/        # React Admin\n├── packages/         # Shared code\n│   ├── ui/          #",
  "sections": [
    {
      "title": "Example 1: Starting a New SaaS Project",
      "content_preview": "### User Request ``` I'm starting a new B2B SaaS project for healthcare data analytics. We're a team of 3 developers, expecting to grow to 8 within 6 "
    },
    {
      "title": "Example 2: Existing Monolith Evaluation",
      "content_preview": "### User Request ``` Our e-commerce platform is 2 years old with 80k lines of code. Build times are 18 minutes, we have 5 devs, and deployment require"
    },
    {
      "title": "Example 3: Multi-Repo Feature Coordination",
      "content_preview": "### User Request ``` We need to implement user authentication across our multi-repo setup (marketing, app, api, admin). How should we coordinate this?"
    },
    {
      "title": "Example 4: Repository Health Monitoring",
      "content_preview": "### User Request ``` How can I monitor our repository structure health and know when it's time to evolve?"
    },
    {
      "title": "Example 5: Learning from Community Patterns",
      "content_preview": "### User Request ``` What patterns has the Project Structure Agent learned from other projects like mine?"
    },
    {
      "title": "Quick Reference Prompts",
      "content_preview": "### Initial Analysis ``` Acting as the Project Structure Agent, analyze my project and recommend initial repository structure."
    }
  ],
  "key_points": [
    "Trigger: SEO requirements conflict with app bundling",
    "Benefit: Independent deployment, better Core Web Vitals",
    "Trigger: HIPAA compliance requires isolated audit logging",
    "Benefit: Security boundary, independent scaling",
    "Trigger: Admin features > 20, dedicated admin team",
    "Benefit: Team autonomy, faster feature development",
    "92% split marketing within 3 months (SEO drove decision)",
    "83% extracted API by month 6 (compliance/versioning needs)",
    "Average velocity improvement: 40% post-split",
    "Zero projects regretted evolution timing"
  ],
  "usage_context": [
    "general_reference"
  ]
}